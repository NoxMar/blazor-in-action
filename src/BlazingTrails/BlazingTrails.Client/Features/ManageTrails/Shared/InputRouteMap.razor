@using BlazingTrails.ComponentLibrary.Map
@inherits InputBase<List<TrailDto.Waypoint>>

<div class="@CssClass">
    <RouteMap Width="100%" OnWaypointAdded="AddWaypoint" OnWaypointDeleted="DeleteWaypoint" Waypoints="_waypoints" />
</div>

@code {
    private List<LatLong> _waypoints = new();

    protected override void OnParametersSet()
    {
        if (!(CurrentValue?.Count > 0)) return;
        _waypoints.Clear();
        _waypoints.AddRange(CurrentValue.Select(w => new LatLong(w.Latitude, w.Longitude)));
    }

    protected override bool TryParseValueFromString(string? value, out List<TrailDto.Waypoint> result, out string? validationErrorMessage)
        => throw new NotSupportedException("This method just fulfills the interface and should not be called");

    private void AddWaypoint(LatLong waypoint)
    {
        _waypoints.Add(waypoint);
        CurrentValue?.Add(new TrailDto.Waypoint(waypoint.Lat, waypoint.Lng));
    }

    private void DeleteWaypoint(LatLong waypoint)
    {
        _waypoints.Remove(waypoint);
        CurrentValue?.Remove(new TrailDto.Waypoint(waypoint.Lat, waypoint.Lng));
    }
}
