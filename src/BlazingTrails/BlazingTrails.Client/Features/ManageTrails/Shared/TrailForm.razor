@using BlazingTrails.Client.Validation
@using BlazingTrails.Shared.Features.ManageTrails.Shared
@using BlazingTrails.ComponentLibrary.Map

<EditForm EditContext="_editContext" OnValidSubmit="SubmitForm">
    <FluentValidationValidator />
    
    <FormSection Title="Basic Details"
                 HelpText="This information is used to identify the trail and can be searched to help hikers find it.">
        <FormFieldSet Width="col-6">
            <label for="trailName" class="fw-bold text-secondary">Name</label>
            <InputText @bind-Value="_trail.Name" class="form-control" id="trailName"/>
            <ValidationMessage For="@(() => _trail.Name)"></ValidationMessage>
        </FormFieldSet>

        <FormFieldSet>
            <label for="trailDescription" class="fw-bold text-secondary">Description</label>
            <InputTextArea @bind-Value="_trail.Description" class="form-control" id="trailDescription"/>
            <ValidationMessage For="@(() => _trail.Description)"></ValidationMessage>
        </FormFieldSet>

        <FormFieldSet Width="col-6">
            <label for="trailLocation" class="fw-bold text-secondary">Location</label>
            <InputText @bind-Value="_trail.Location" class="form-control" id="trailLocation"/>
            <ValidationMessage For="@(() => _trail.Location)"></ValidationMessage>
        </FormFieldSet>
        
        <FormFieldSet>
            <label for="trailImage" class="fw-bold text-secondary">Image</label>
            <InputFile OnChange="LoadTrailImage" class="form-control-file" 
                       id="trailImage" accept=".png,.jpg,.jpeg" />
        </FormFieldSet>
    </FormSection>

    <FormSection Title="Difficulty"
                 HelpText="Help other hikers out by telling them of the trail is how long it might take them.">

        <FormFieldSet Width="col-3">
            <label for="trailLength"
                   class="fw-bold text-secondary">Length (km)</label>
            <InputNumber @bind-Value="_trail.LengthKm"
                         class="form-control" id="trailLength"/>
            <ValidationMessage For="@(() => _trail.LengthKm)" />
        </FormFieldSet>
        
        <FormFieldSet Width="col-5">
            <label for="trailTime"
                   class="fw-bold text-secondary">Time</label>
            <InputTime @bind-Value="_trail.TimeInMinutes" id="trailTime" />
            <ValidationMessage For="@(() => _trail.TimeInMinutes)" />
        </FormFieldSet>
    </FormSection>

    <FormSection Title="Route Instructions"
                 HelpText="Route instructions are a guide for the trail. This helps hikers new to the trail stay on track.">
        <RouteMap Width="100%"></RouteMap>
    </FormSection>
    <div class="mt-4 mb-5">
        <div class="row">
            <div class="offset-4 col-8 text-right">
                <button class="btn btn-outline-secondary"
                        type="button"
                        @onclick="ResetForm">Reset</button>
                <button class="btn btn-primary"
                        type="submit">Submit</button>
            </div>
        </div>
    </div>

</EditForm>

@code {
    private TrailDto _trail = new();
    private EditContext _editContext = default!;
    private IBrowserFile? _trailImage;

    [Parameter, EditorRequired]
    public Func<TrailDto, IBrowserFile?, Task> OnSubmit { get; set; } = default!;

    protected override void OnInitialized()
    {
        _editContext = new EditContext(_trail);
        _editContext.SetFieldCssClassProvider(new BootstrapCssClassProvider());
    }

    private async Task SubmitForm()
        => await OnSubmit(_trail, _trailImage);
    
    
    public void ResetForm()
    {
        _trail = new TrailDto();
        _editContext = new EditContext(_trail);
        _editContext.SetFieldCssClassProvider(
            new BootstrapCssClassProvider());
        _trailImage = null;
    }

    private void LoadTrailImage(InputFileChangeEventArgs e)
        => _trailImage = e.File;
}