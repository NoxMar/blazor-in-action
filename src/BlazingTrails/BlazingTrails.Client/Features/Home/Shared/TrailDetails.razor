<Offcanvas @ref="_offcanvas" Placement="Placement.End">
    <BodyTemplate>
        <div class="d-flex flex-column">
            @if (_activeTrail is not null)
                {
                    <img src="images/@_activeTrail.Image" alt="photo from trail"/>
                    <div class="trail-details">
                        <h3>@_activeTrail.Name</h3>
                        <h6 class="mb-3 text-muted">
                            <span class="oi oi-map-marker"></span>
                            @_activeTrail.Location
                        </h6>
                        <div class="mt-4">
                            <span class="mr-5">
                                <span class="oi oi-clock mr-2"></span>
                                @_activeTrail.TimeFormatted
                            </span>
                            <span>
                                <span class="oi oi-infinity mr-2"></span>
                                @_activeTrail.LengthKm km
                            </span>
                        </div>
                        <p class="mt-4">@_activeTrail.Description</p>
                    </div>
                    @if (_activeTrail.Waypoints.Any())
                    {
                        <RouteMap Waypoints="_activeTrail.Waypoints"
                                  IsReadOnly="true"/>
                    }
                }
        </div>
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Secondary" @onclick="() => _offcanvas.HideAsync()">Close</Button>
    </FooterTemplate>
</Offcanvas>

@code {
    private Offcanvas _offcanvas = default!;
    private bool _isOpen;
    private Trail? _activeTrail;

    [Parameter, EditorRequired]
    public Trail? Trail
    {
        get => _activeTrail;
        set
        {
            _activeTrail = value;
            _isOpen = true;
            if (_activeTrail is not null)
            {
                _offcanvas.ShowAsync();
            }
        }
    }

    protected override void OnParametersSet()
    {
        if (Trail is not null)
        {
            _activeTrail = Trail;
            _isOpen = true;
        }
    }

    private async Task Close()
    {
        await _offcanvas.HideAsync();
    }

    private void OnAfterClose()
    {
        _activeTrail = null;
        _isOpen = false;
    }

}